name: Hugo-CI
on:
  push:
    branches: [ master ]
    paths:
      - 'Docs/**'

jobs:
  job-one:
    name: Deploy
    runs-on: [self-hosted, linux, x64, dev4-github]
    steps:
      - name: diagnostic info
        run: |
          echo 'ls -la /etc/nginx'
          ls -la /etc/nginx
          echo 'ls -la /etc/nginx/conf.d'
          ls -la /etc/nginx/conf.d
          echo 'ls -la /etc/nginx/sites-available'
          ls -la /etc/nginx/sites-available
          echo 'ls -la /etc/nginx/sites-enabled'
          ls -la /etc/nginx/sites-enabled
          echo 'cat /etc/nginx/nginx.conf'
          cat /etc/nginx/nginx.conf
          echo 'cat /etc/nginx/conf.d/dokku.conf'
          cat /etc/nginx/conf.d/dokku.conf
          echo 'cat /etc/nginx/conf.d/server_names_hash_bucket_size.conf'
          cat /etc/nginx/conf.d/server_names_hash_bucket_size.conf
          echo 'cat /etc/nginx/sites-enabled/default'
          cat /etc/nginx/sites-enabled/default       
      - name: hugo build
        run: |
          cd aspose-html-docs
          git clone --single-branch --branch master https://github.com/aspose-html/Aspose.HTML-for-Java.git || (cd Aspose.HTML-for-Java; git pull --rebase origin master)
          git clone --single-branch --branch master https://git.dev.dynabic.com/containerize-hugo/lutsk-aspose-prototype.git || (cd lutsk-aspose-prototype; git pull)
          cd lutsk-aspose-prototype
          git clone --single-branch --branch master https://git.dev.dynabic.com/containerize-hugo/lutsk-aspose-theme.git || (cd lutsk-aspose-theme; git pull)
          sudo npm install -D --save autoprefixer
          sudo npm install -D --save postcss-cli
          cp -R ${{ secrets.PROJECTPATH }}/Aspose.HTML-for-Java/Docs/* content/java
          hugo --baseURL https://docs.aspose.com/html
          scp -r public/java/* ${{ secrets.TRANSFERPATH }}
      - name: hugo deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          port: ${{ secrets.SSHPORT }}
          script: |
            sudo cp -R ${{ secrets.PUBLICCONTENTPATH }} ${{ secrets.DEPLOYPATH }}
            sudo nginx -s reload
